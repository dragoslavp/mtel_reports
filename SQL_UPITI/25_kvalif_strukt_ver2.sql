WITH A AS
(
SELECT 
PAPF.PERSON_ID
,PAPF.EMPLOYEE_NUMBER BROJ_RADNIKA
,NVL(SUBSTR(PAAF.ASS_ATTRIBUTE5,1,(INSTR(PAAF.ASS_ATTRIBUTE5,' ',1))-1),'NDP-X') PRIZNATA_SS
FROM 
PER_ALL_PEOPLE_F PAPF
LEFT OUTER JOIN PER_ALL_ASSIGNMENTS_F PAAF ON PAPF.PERSON_ID=PAAF.PERSON_ID
LEFT OUTER JOIN PER_PERSON_TYPES_TL PPT ON PAPF.PERSON_TYPE_ID=PPT.PERSON_TYPE_ID
WHERE 
1=1
AND :P_DATUM BETWEEN PAPF.EFFECTIVE_START_DATE AND PAPF.EFFECTIVE_END_DATE
AND :P_DATUM BETWEEN PAAF.EFFECTIVE_START_DATE AND PAAF.EFFECTIVE_END_DATE
AND PPT.USER_PERSON_TYPE='Radnik'
AND PPT.LANGUAGE='LSR'
AND PAAF.ASS_ATTRIBUTE5 IS NOT NULL),
b as (
select 
q1.person_id person_id
,q1.name name
,q1.rank rank
,row_number() over (partition by q1.person_id order by q1.rank desc) rank2
from 
(
select 
pq.person_id
,pqt.name
,pqt.rank
from 
PER_QUALIFICATIONS pq 
left outer join 
PER_QUALIFICATION_types pqt on PQ.QUALIFICATION_TYPE_ID=PQT.QUALIFICATION_TYPE_ID
) q1),
C AS (
select 
person_id PERSON_ID
,name STVARNA_SS
,rank RANG_STVARNE_SS
from B
where B.rank2=1)
,D AS (
SELECT 
A.PERSON_ID
,A.PRIZNATA_SS
,C.STVARNA_SS
,DECODE(A.PRIZNATA_SS,C.STVARNA_SS,0,1) SLAGANJE
FROM A LEFT OUTER JOIN C ON A.PERSON_ID=C.PERSON_ID
),
E as (
select 
QUALIFICATION_TYPE_ID QID, 
name SPREMA, 
rank RANG 
from PER_QUALIFICATION_TYPES
)
SELECT
E.RANG
,D.PRIZNATA_SS
,SUM(D.SLAGANJE) BROJ_RADNIKA
FROM D 
LEFT OUTER JOIN E ON D.PRIZNATA_SS=E.SPREMA
GROUP BY D.PRIZNATA_SS, E.RANG
ORDER BY E.RANG;




























--ORDER BY B.RANG_SS DESC;